<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class QuestionTag extends BaseQuestionTag
{

	public function setTag($v)
	{
		$this->rawSet('tag', $v);

		$this->setNormalizedTag(Tag::normalize($v));
	}

	public static function getTagsForUserLike($user_id, $tag, $max = 10)
	{
		$tags = Doctrine_Query::create()
								->select('qt.tag')
								->from('QuestionTag qt')
								->where('qt.user_id = ?', $user_id)
								->addWhere("qt.tag LIKE '".$tag."%'")
								->orderBy('qt.tag')
								->limit($max)
								->fetchArray();
		return $tags;						
		
	}
 	
	public static function getPopularTags($max = 5)
	{
		$tags = array();

		$rs = Doctrine_Query::create()
							->select('t.normalized_tag tag, COUNT(t.normalized_tag) count')
							->from('QuestionTag t')
							->groupBy('t.normalized_tag')
							->orderBy('count DESC')
							->Limit($max)
							->execute();
		$max_popularity = 0;
		
		foreach ($rs as $tag)
		{
			if (!$max_popularity)
			{
				$max_popularity = $tag['count'];
			}

			$tags[$tag['tag']] = floor(($tag['count'] / $max_popularity * 3) + 1);
		}

		ksort($tags);

		return $tags;
	}
	
	
}